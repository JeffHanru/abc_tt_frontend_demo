// Generated by https://app.quicktype.io/

export interface DataProp {
  _embedded:     DataPropEmbedded;
  canonicalURL:  string;
  dates:         Dates;
  docType:       string;
  embeddedMedia: EdMedia[];
  featuredMedia: EdMedia[];
  id:            string;
  keywords:      string[];
  source:        string;
  sourceURL:     string;
  synopsis:      string;
  synopsisAlt:   SynopsisAlt;
  text:          Text;
  title:         string;
  titleAlt:      TitleAlt;
}

export interface DataPropEmbedded {
  contributors:  Contributor[];
  locations:     Location[];
  mediaEmbedded: MediaEmbedded[];
  mediaFeatured: MediaFeatured[];
  subjects:      Location[];
}

export interface Contributor {
  canonicalURL: string;
  id:           string;
  names:        Names;
  role:         string;
}

export interface Names {
  first: string;
  full:  string;
  last:  string;
}

export interface Location {
  canonicalURL: string;
  id:           string;
  title:        string;
}

export interface MediaEmbedded {
  alt?:           string;
  byLine?:        ByLine;
  canonicalURL?:  string;
  caption?:       string;
  dates:          Dates;
  docType:        string;
  id:             string;
  media?:         Media;
  title:          string;
  titleAlt:       TitleAlt;
  _embedded?:     MediaEmbeddedEmbedded;
  synopsis?:      string;
  synopsisAlt?:   SynopsisAlt;
  teaserText?:    TeaserText;
  viewType?:      string;
  externalembed?: Externalembed;
}

export interface MediaEmbeddedEmbedded {
  mediaEmbedded: FluffyMediaEmbedded[];
}

export interface FluffyMediaEmbedded {
  canonicalURL: string;
  dates:        Dates;
  docType:      string;
  id:           string;
  title:        string;
  titleAlt:     TitleAlt;
}

export interface Dates {
  displayPublished: string;
  published:        string;
  updated:          string;
  displayUpdated?:  string;
}

export interface TitleAlt {
  lg: string;
  md: string;
  sm: string;
}

export interface ByLine {
  json: ByLineJSON;
}

export interface ByLineJSON {
  type:       string;
  tagname:    string;
  parameters: JSONParameters;
  children:   PurpleChild[];
}

export interface PurpleChild {
  type:        string;
  tagname?:    string;
  children?:   FluffyChild[];
  parameters?: PurpleParameters;
  content?:    string;
}

export interface FluffyChild {
  type:    string;
  content: string;
}

export enum Type {
  Element = "element",
  Text = "text",
}

export interface PurpleParameters {
  ref:  string;
  show: string;
}

export enum Tagname {
  A = "a",
  H1 = "h1",
  P = "p",
  Pullquote = "pullquote",
}

export interface JSONParameters {
  xmlns:         string;
  "xmlns:xlink": string;
}

export interface Externalembed {
  id:  string;
  url: string;
}

export interface Media {
  image: Image;
}

export interface Image {
  primary: Primary;
}

export interface Primary {
  complete: Complete[];
}

export interface Complete {
  cropHeight: number;
  cropWidth:  number;
  height:     number;
  ratio?:      string;
  url:        string;
  width:      number;
  x:          number;
  y:          number;
}

export interface SynopsisAlt {
  lg: string;
  sm: string;
}

export interface TeaserText {
  json: TeaserTextJSON;
}

export interface TeaserTextJSON {
  type:       string;
  tagname:    string;
  parameters: JSONParameters;
  children:   TentacledChild[];
}

export interface TentacledChild {
  type:     string;
  tagname:  string;
  children: StickyChild[];
}

export interface StickyChild {
  type:      string;
  content?:  string;
  tagname?:  string;
  children?: PurpleChild[];
}

export interface MediaFeatured {
  alt:          string;
  byLine:       ByLine;
  canonicalURL: string;
  caption:      string;
  dates:        Dates;
  docType:      string;
  id:           string;
  media:        Media;
  title:        string;
  titleAlt:     TitleAlt;
}

export interface EdMedia {
  docType: string;
  id:      string;
}

export interface Text {
  json: TextJSON;
}

export interface TextJSON {
  type:       string;
  tagname:    string;
  parameters: JSONParameters;
  children:   IndigoChild[];
}

export interface IndigoChild {
  type:        string;
  tagname:     string;
  children:    PurpleChild[];
  parameters?: FluffyParameters;
}

export interface FluffyParameters {
  align: string;
  ref:   string;
}
